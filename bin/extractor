#!/usr/bin/env python

import sys
import json

TEMPLATE = f''

def lift_to_list(o):
    if isinstance(o, list):
        return o
    else:
        return [o]

def is_of_type(o, ty):
    if not '@type' in o:
        return false
    k = o['@type']
    return ty in lift_to_list(k)

def dictify(graph):
    d = {}
    for elt in graph:
        if '@id' in elt:
            d[elt['@id']] = elt
    return d

count = 0
for line in sys.stdin:
    try:
        obj = json.loads(line)
        elts = obj['@graph']
        d = dictify(elts)
        name = None
        occupation = None
        birthplace = None
        record_type = None
        note = None
        source = None
        for i in d:
            elt = d[i]
            if is_of_type(elt, 'http://id.loc.gov/ontologies/bibframe/Organization'):
                record_type = 'Organization'
                name = elt["rdfs:label"]

            if is_of_type(elt, 'http://id.loc.gov/ontologies/bibframe/Person'):
                record_type = 'Person'
                if 'madsrdf:birthPlace' in elt:
                    birthplace_id = elt['madsrdf:birthPlace']['@id']

                    birthplace = d[birthplace_id]['rdfs:label']

                if 'madsrdf:occupation' in elt:
                    occupation_id = elt['madsrdf:occupation']['@id']

                    occ_obj = d[occupation_id]
                    if 'madsrdf:authoriativeLabel' in occ_obj:
                        occupation = occ_obj['madsrdf:authoriativeLabel']

            if is_of_type(elt, 'madsrdf:PersonalName'):
                if 'madsrdf:authoritativeLabel' in elt:
                    name = elt['madsrdf:authoritativeLabel']

                if 'madsrdf:hasSource' in elt:
                    source_id_objs = lift_to_list(elt['madsrdf:hasSource'])
                    for source_id_obj in source_id_objs:
                        source_id = source_id_obj['@id']
                        source_obj = d[source_id]
                        if 'madsrdf:citationNote' in source_obj:
                            note = source_obj['madsrdf:citationNote']
                            if 'madsrdf:citationNote' in source_obj:
                                source = source_obj['madsrdf:citationSource']


        embedding_string = ''

        if record_type == 'Person':
            if name:
                embedding_string += f'This person\'s name is {name}. '
            if occupation:
                embedding_string += f'They work in a field described as {occupation}. '
            if birthplace:
                embedding_string += f'They were born in {birthplace}. '

            if note:
                embedding_string += f'The following ciation note applies to this person: {note}. '
                if source:
                    embedding_string += f'This is according to: {source}'

        elif record_type == 'Organization':
            if name:
                embedding_string += f'This organization\'s name is {name}. '

        if embedding_string == '':
            print(f"Found no content for record with id {count}", file=sys.stderr)
        else:
            output_dict = {'op': 'Inserted', 'id' : count, 'string': embedding_string}
            print(json.dumps(output_dict))
    except Exception as e:
        print(e)

    count+=1

