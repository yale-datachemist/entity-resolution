#!/usr/bin/env python
import csv

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("--matches", "-m", help="Matches csv from VectorLink output")
    parser.add_argument("--results", "-r", help="Correct results")
    parser.add_argument("--name-agent-map", "-n", help="File with Name <> Auth map")
    args = parser.parse_args()

    name_agent_map = {}
    match_fields = ['name', 'auth']
    with open(args.name_agent_map, 'r') as f:
        r = csv.DictReader(f, fieldnames=match_fields)
        for d in r:
            name_agent_map[d['name']] = d['auth']

    match_fields = ['unindexed', 'indexed', 'distance']
    matches = {}
    with open(args.results, 'r') as f:
        r = csv.DictReader(f, fieldnames=match_fields)
        for d in r:
            matches[d['unindexed']] = { 'indexed': d['indexed'],
                                        'distance' : d['distance']})

    total = 0
    relevant = 0
    positive = 0
    with open(args.answers, 'r') as f:
        r = csv.DictReader(f)
        for d in r:
            total += 1
            gen_id = d['Gen_ID']
            name_id = d['LC_ID']
            if gen_id in matches:
                relevant += 1
                m = matches[gen_id]
                if name_id in name_agent_map:
                    agent_id = name_agent_map[name_id]
                    if agent_id == m['indexed']:
                        positive += 1

    print(f"total: {total}\nrelevant: {relevant}\npositive: {positive}")

    recall = relevant / total
    precision = positive / relevant
    print(f"recall: {recall}\nprecision: {precision}")
